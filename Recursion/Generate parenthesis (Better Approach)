from typing import List

def solve(curr: str, open_count: int, close_count: int, n: int, res: List[str]):
    if len(curr) == 2 * n:
        res.append(curr)
        return

    if open_count < n:  
        solve(curr + "(", open_count + 1, close_count, n, res)

    if close_count < open_count: 
        solve(curr + ")", open_count, close_count + 1, n, res)

def validParenthesis(n: int) -> List[str]:
    res = []
    solve("", 0, 0, n, res)
    return res
