class Solution {
    static int count=0;
    public static boolean isSafe(char[][] board, int row, int col){
        for(int i=row-1; i>=0;i--){
            if (board[i][col]=='Q'){
                return false;
            }
        }
        for (int i=row-1,j=col-1;i>=0 && j>=0;i--,j--){
            if (board[i][j]=='Q'){
                return false;
            }
        }
        for (int i=row-1,j=col+1;i>=0 && j<board.length;i--,j++){
            if (board[i][j]=='Q'){
                return false;
            }
        }
        return true;
    }
    public void solve(char[][] board, int row){
        if (row==board.length){
            count++;
            return;
        }
        for (int col=0;col<board.length;col++){
            if (isSafe(board,row,col)){
                board[row][col]='Q';
                solve(board,row+1);
                board[row][col]='.';
            }
        }
    }
    public int totalNQueens(int n) {
        count=0;
        char[][] board=new char[n][n];
        for (int i=0;i<n;i++){
            for (int j=0;j<n;j++){
                board[i][j]='.';
            }
        }
        solve(board,0);
        return count;
    }
}
