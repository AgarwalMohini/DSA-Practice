from typing import List
from collections import Counter
def count_at_most(arr:List[int],k:int)->int:
    l=0
    r=0
    count=0
    mpp={}
    n=len(arr)
    while r<n:
        mpp[arr[r]]=mpp.get(arr[r],0)+1
        while len(mpp)>k:
            mpp[arr[l]]-=1
            if mpp[arr[l]]==0:
                del mpp[arr[l]]
            l+=1
        count+=(r-l+1)
        r+=1
    return count

def kDistinctSubarrays(arr: List[int], n: int, k: int) -> int:
    # write your code here
    if k<1:
        return 0
    return count_at_most(arr,k)-count_at_most(arr,k-1)
    
    pass
