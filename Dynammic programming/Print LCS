def lcs(m: int, n: int, s1: str, s2: str):
    t = [[0 for _ in range(n + 1)] for _ in range(m + 1)]
    for i in range(m + 1):
        t[i][0] = 0
    for j in range(n + 1):
        t[0][j] = 0
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if s1[i - 1] == s2[j - 1]:
                t[i][j] = 1 + t[i - 1][j - 1]
            else:
                t[i][j] = max(t[i - 1][j], t[i][j - 1])
    return t

def findLCS(n: int, m: int, s1: str, s2: str) -> str:
    t = lcs(n, m, s1, s2)

    i = n
    j = m
    s = []

    while i > 0 and j > 0:
        if s1[i - 1] == s2[j - 1]:
            s.append(s1[i - 1])
            i -= 1
            j -= 1
        else:
            if t[i][j - 1] > t[i - 1][j]:
                j -= 1
            else:
                i -= 1

    return ''.join(reversed(s))
