from typing import List

class Solution:
    def solve(self, s: str, i: int, j: int, t: List[List[int]]) -> int:
        if i >= j:
            return 1
        if t[i][j] != -1:
            return t[i][j]
        if s[i] == s[j]:
            t[i][j] = self.solve(s, i + 1, j - 1, t)
        else:
            t[i][j] = 0
        return t[i][j]

    def longestPalindrome(self, s: str) -> str:
        n = len(s)
        t = [[-1 for _ in range(n)] for _ in range(n)]
        maxLen = 0
        start = 0

        for i in range(n):
            for j in range(i, n):
                if s[i] == s[j] and self.solve(s, i, j, t):
                    if j - i + 1 > maxLen:
                        maxLen = j - i + 1
                        start = i
        return s[start:start+maxLen]
