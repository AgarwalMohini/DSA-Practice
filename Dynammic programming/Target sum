from collections import *
from math import *

from typing import List

def targetSum(arr: List[int], target: int) -> int:
    MOD = int(1e9 + 7)
    n=len(arr)
    totSum=sum(arr)
    if abs(target)>totSum or (totSum+target)%2!=0:
        return 0
    s1=(totSum+target)//2
    if s1 < 0:
        return 0 
    t=[[0 for _ in range(s1+1)] for _ in range(n+1)]
    for i in range(n+1):
        t[i][0]=1
    for i in range(1,n+1):
        for j in range(s1+1):
            if arr[i-1]<=j:
                t[i][j]=(t[i-1][j-arr[i-1]] + t[i-1][j]) % MOD
            else:
                t[i][j]=t[i-1][j] % MOD
    return t[n][s1]
    pass
