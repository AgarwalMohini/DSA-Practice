from typing import List

def unboundedKnapsack(n: int, w: int, profit: List[int], weight: List[int]) -> int:
    # write your code here
    t=[[0 for _ in range(w+1)] for _ in range(n+1)]
    for i in range(n+1):
        t[i][0]=0
    for i in range(1,n+1):
        for j in range(1,w+1):
            if weight[i-1]<=j:
                t[i][j]=max(profit[i-1]+ t[i][j-weight[i-1]], t[i-1][j])
            else:
                t[i][j]=t[i-1][j]
    return t[n][w]
    pass
