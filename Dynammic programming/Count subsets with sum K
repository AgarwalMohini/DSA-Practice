from typing import List

def findWays(arr, k):
    MOD = int(1e9+7)
    n = len(arr)
    t = [[0 for _ in range(k + 1)] for _ in range(n + 1)]

    # Base case: there's always 1 way to make sum 0 (empty subset)
    for i in range(n + 1):
        t[i][0] = 1

    for i in range(1, n + 1):
        for j in range(k + 1):
            if arr[i - 1] <= j:
                t[i][j] = (t[i - 1][j - arr[i - 1]] + t[i - 1][j]) % MOD
            else:
                t[i][j] = t[i - 1][j] % MOD

    return t[n][k]


