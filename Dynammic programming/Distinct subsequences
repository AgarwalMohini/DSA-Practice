from typing import List

class Solution:
    def solve(self, i: int, j: int, s1: str, s2: str, dp: List[List[int]]) -> int:
        if j < 0:
            return 1
        if i < 0:
            return 0
        if dp[i][j] != -1:
            return dp[i][j]
        
        if s1[i] == s2[j]:
            dp[i][j] = self.solve(i - 1, j - 1, s1, s2, dp) + self.solve(i - 1, j, s1, s2, dp)
        else:
            dp[i][j] = self.solve(i - 1, j, s1, s2, dp)
        return dp[i][j]

    def numDistinct(self, s: str, t: str) -> int:
        m, n = len(s), len(t)
        dp = [[-1 for _ in range(n)] for _ in range(m)]
        return self.solve(m - 1, n - 1, s, t, dp)
