import java.util.* ;
import java.io.*; 
/*
	Following is the class used to represent the object/node of the Binary Tree

	class BinaryTreeNode<T> {
	    T data;
	    BinaryTreeNode<T> left;
	    BinaryTreeNode<T> right;

	    public BinaryTreeNode(T data) {
	        this.data = data;
	    }
	}
*/

public class Solution {
	public static List<Integer> zigZagTraversal(BinaryTreeNode<Integer> root) {
		List<Integer> res = new ArrayList<>();
		if (root == null) return res;

		Queue<BinaryTreeNode<Integer>> q = new LinkedList<>();
		q.add(root);
		boolean ltr = true;

		while (!q.isEmpty()) {
			int n = q.size();
			LinkedList<Integer> level = new LinkedList<>();

			for (int i = 0; i < n; i++) {
				BinaryTreeNode<Integer> node = q.poll();

				if (ltr)
					level.addLast(node.data);
				else
					level.addFirst(node.data);

				if (node.left != null) q.add(node.left);
				if (node.right != null) q.add(node.right);
			}
			
			// Add all elements from level to result
			res.addAll(level); 
			ltr = !ltr; // flip direction
		}

		return res;
	}
}

