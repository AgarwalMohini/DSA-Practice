from typing import List

class Solution:
    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:
        # Step 1: Initialize distance array
        dist = [float('inf')] * n
        dist[src] = 0

        # Step 2: Relax edges at most k+1 times
        for _ in range(k + 1):
            temp = dist.copy()  # Take a snapshot to avoid over-relaxation in the same round
            for u, v, w in flights:
                if dist[u] != float('inf') and dist[u] + w < temp[v]:
                    temp[v] = dist[u] + w
            dist = temp

        return -1 if dist[dst] == float('inf') else dist[dst]
